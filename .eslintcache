[{"/Users/raymondlee/Desktop/Portfolio/portfolio/src/App.js":"1","/Users/raymondlee/Desktop/Portfolio/portfolio/src/index.js":"2","/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/Menubar.js":"3","/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/About.js":"4","/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/Project.js":"5","/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/Contact.js":"6","/Users/raymondlee/Desktop/Portfolio/portfolio/src/reportWebVitals.js":"7","/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/DesignProject.js":"8"},{"size":5757,"mtime":1608002376843,"results":"9","hashOfConfig":"10"},{"size":500,"mtime":1606171651537,"results":"11","hashOfConfig":"10"},{"size":985,"mtime":1608002193005,"results":"12","hashOfConfig":"10"},{"size":2158,"mtime":1608001117596,"results":"13","hashOfConfig":"10"},{"size":1714,"mtime":1608001089537,"results":"14","hashOfConfig":"10"},{"size":1003,"mtime":1608004088115,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1606171524912,"results":"16","hashOfConfig":"10"},{"size":1345,"mtime":1607905159809,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1eh9xa4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/raymondlee/Desktop/Portfolio/portfolio/src/App.js",["37","38","39"],"\nimport './App.css';\nimport Menubar from './Components/Menubar'\nimport About from './Components/About'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Project from './Components/Project'\nimport Contact from './Components/Contact'\nimport Filmboardimage from './filmboard.png'\nimport Ideanicheimage from './ideaniche.png'\nimport Campaigntheoryimage from './campaigntheory.png'\nimport Dogappimage from './dogapp.png'\nimport Travelappimage from './travelapp.png'\nimport Teslaimage from './tesla.png'\nimport DesignProject from './Components/DesignProject'\nimport arrow from './arrow.svg'\nimport BackgroundImage from './background.jpg'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      tesla: {\n        image: Teslaimage,\n        description: \"Came across a top design on Behance, and approached it through code [Not mobile responsive due to Tesla's static screen]. Took screenshots, cut out each component in Sketch: labeling grid percentages, padding, margins, and overall layout of each component. Built the layout using React and separated the components into BottomBar, MusicView, PlayBar, SecondaryBar, and TopBar. Added an animation that allowed the user to swipe up on the playbar showcasing the MusicView. Captured the user's window height and subtracted it from the user's Y mouse position while setting boundaries to then change the CSS height of the component resulting in a seamless swipe.\",\n        tools: [\"ReactJS\", \"CSS\", \"Mouse Events\", \"Grid\", \"React-Feathers\", \"Sketch\"],\n        githubLink: \"https://github.com/rl45/tesla\",\n        websiteLink: \"https://5fc35081c2e60873f54d31a2--tesla-interface.netlify.app\",\n        name: \"tesla\"\n      },\n      filmboard: {\n        image: Filmboardimage,\n        description: \"Filmboard is a pre-production software that improves the workflow speed for Filmmakers and their clients. Features include moodboards, storyboards, shot lists, vendor uploads, and sharing with users. I created Filmboard with a MERN Stack and hosted it on Heroku. As a freelance video producer, there was an itch to create a cheaper and simpler workflow for my clients and I instead of paying for 5 different tools. During this journey, it's crucial to find product validation, design through Sketch, then develop it exactly.\",\n        tools: [\"MongoDB\", \"Express\", \"ReactJS\", \"NodeJS\", \"CSS\"],\n        githubLink: \"https://github.com/rl45/filmboard/\",\n        websiteLink: \"https://filmboard.io\",\n        name: \"filmboard\"\n      },\n      ideaniche: {\n        image: Ideanicheimage,\n        description: \"Ideaniche is a tool to search the top questions within any of the 138,000 subreddits. Ideaniche was created out of a need to find problems worth solving by tapping into Reddit communities and using NLP to parse the semantics of each post to find the top upvoted questions.\",\n        tools: [\"NLP\", \"ReactJS\", \"NodeJS\", \"CSS\", \"Puppeteer\"],\n        githubLink: \"https://github.com/rl45/ideanichemain3\",\n        websiteLink: \"https://redditscraperclient.herokuapp.com\",\n        name: \"ideaniche\"\n      },\n      campaigntheory: {\n        image: Campaigntheoryimage,\n        description: \"Campaigntheory was created for a local entreprenuer that was interested in starting a marketing agency. The key was to create a convicing landing page that allowed customers to subscribe to a reoccuring fee throuh Zoho. This project also required using graphics and video elements to improve the visual component.\",\n        tools: [\"HTML\", \"CSS\", \"Javascript\", \"Netlify\", \"Zoho\"],\n        githubLink: \"https://github.com/rl45/campaigntheorywebsite\",\n        websiteLink: \"https://www.campaigntheory.io\",\n        name: \"campaigntheory\"\n      },\n      dogapp: {\n        image: Dogappimage,\n        description: \"As a dog owner, I saw a need in creating an app that included training sessions, nearby dog parks, and ability to connect to other dogs. The main inspiration was to keep the app minimal and decrease the amount of interactions for the user. In the mapView, you're able to see both the maps and nearby locations without wasting any space. \",\n        tools: [\"Sketch\", \"SketchAppResources\"],\n        name: \"dogapp\"\n      },\n      travelapp: {\n        image: Travelappimage,\n        description: \"As a photographer. I'm always searching for the next best landscape location. I designed this travelApp to have a clean interface that allows me to find locations based off of catergories with each location consisting of descriptions, reviews, and gallary images from other users. Each component can expand once a user taps on it, but by having a preview window, it allows me to give more information to the user.\",\n        tools: [\"Sketch\", \"SketchAppResources\"],\n        name: \"travelapp\"\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Menubar></Menubar>\n        <div class=\"container\" id=\"home\">\n          <div className=\"Home\">\n            <div className=\"white content\" >\n              <h1 className=\"name\">Raymond Lee</h1>\n              <p className=\"bio\">My purpose is to make impactful applications that brings value to thousands of people.</p>\n            </div>\n          </div>\n          <About></About>\n          <div class=\"wrapper\">\n            <Project props={this.state.tesla}></Project>\n            <Project props={this.state.filmboard}></Project>\n            <Project props={this.state.ideaniche}></Project>\n            <Project props={this.state.campaigntheory}></Project>\n            <DesignProject props={this.state.travelapp}></DesignProject>\n            <DesignProject props={this.state.dogapp}></DesignProject>\n          </div>\n          <Contact></Contact>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/raymondlee/Desktop/Portfolio/portfolio/src/index.js",[],["40","41"],"/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/Menubar.js",["42","43","44","45"],"/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/About.js",["46"],"/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/Project.js",[],"/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/Contact.js",[],"/Users/raymondlee/Desktop/Portfolio/portfolio/src/reportWebVitals.js",[],["47","48"],"/Users/raymondlee/Desktop/Portfolio/portfolio/src/Components/DesignProject.js",[],{"ruleId":"49","severity":1,"message":"50","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":16},{"ruleId":"49","severity":1,"message":"53","line":16,"column":8,"nodeType":"51","messageId":"52","endLine":16,"endColumn":13},{"ruleId":"49","severity":1,"message":"54","line":17,"column":8,"nodeType":"51","messageId":"52","endLine":17,"endColumn":23},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"49","severity":1,"message":"59","line":3,"column":23,"nodeType":"51","messageId":"52","endLine":3,"endColumn":34},{"ruleId":"49","severity":1,"message":"60","line":3,"column":42,"nodeType":"51","messageId":"52","endLine":3,"endColumn":48},{"ruleId":"49","severity":1,"message":"61","line":3,"column":50,"nodeType":"51","messageId":"52","endLine":3,"endColumn":61},{"ruleId":"62","severity":1,"message":"63","line":10,"column":44,"nodeType":"64","endLine":10,"endColumn":71},{"ruleId":"65","severity":1,"message":"66","line":8,"column":5,"nodeType":"67","messageId":"68","endLine":11,"endColumn":6},{"ruleId":"55","replacedBy":"69"},{"ruleId":"57","replacedBy":"70"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'arrow' is defined but never used.","'BackgroundImage' is defined but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'NavDropdown' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["71"],["72"],"no-global-assign","no-unsafe-negation"]